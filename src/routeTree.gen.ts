/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DocsDocsLayoutRouteImport } from './routes/docs/_docs-layout'
import { Route as DocsDocsLayoutIndexRouteImport } from './routes/docs/_docs-layout/index'
import { Route as DocsDocsLayoutDropdownGuideRouteImport } from './routes/docs/_docs-layout/dropdown-guide'
import { Route as DocsDocsLayoutAutocompleteGuideRouteImport } from './routes/docs/_docs-layout/autocomplete-guide'

const DocsRouteImport = createFileRoute('/docs')()

const DocsRoute = DocsRouteImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsDocsLayoutRoute = DocsDocsLayoutRouteImport.update({
  id: '/_docs-layout',
  getParentRoute: () => DocsRoute,
} as any)
const DocsDocsLayoutIndexRoute = DocsDocsLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DocsDocsLayoutRoute,
} as any)
const DocsDocsLayoutDropdownGuideRoute =
  DocsDocsLayoutDropdownGuideRouteImport.update({
    id: '/dropdown-guide',
    path: '/dropdown-guide',
    getParentRoute: () => DocsDocsLayoutRoute,
  } as any)
const DocsDocsLayoutAutocompleteGuideRoute =
  DocsDocsLayoutAutocompleteGuideRouteImport.update({
    id: '/autocomplete-guide',
    path: '/autocomplete-guide',
    getParentRoute: () => DocsDocsLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/docs': typeof DocsDocsLayoutRouteWithChildren
  '/docs/autocomplete-guide': typeof DocsDocsLayoutAutocompleteGuideRoute
  '/docs/dropdown-guide': typeof DocsDocsLayoutDropdownGuideRoute
  '/docs/': typeof DocsDocsLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/docs': typeof DocsDocsLayoutIndexRoute
  '/docs/autocomplete-guide': typeof DocsDocsLayoutAutocompleteGuideRoute
  '/docs/dropdown-guide': typeof DocsDocsLayoutDropdownGuideRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/docs': typeof DocsRouteWithChildren
  '/docs/_docs-layout': typeof DocsDocsLayoutRouteWithChildren
  '/docs/_docs-layout/autocomplete-guide': typeof DocsDocsLayoutAutocompleteGuideRoute
  '/docs/_docs-layout/dropdown-guide': typeof DocsDocsLayoutDropdownGuideRoute
  '/docs/_docs-layout/': typeof DocsDocsLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/docs'
    | '/docs/autocomplete-guide'
    | '/docs/dropdown-guide'
    | '/docs/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/docs' | '/docs/autocomplete-guide' | '/docs/dropdown-guide'
  id:
    | '__root__'
    | '/'
    | '/docs'
    | '/docs/_docs-layout'
    | '/docs/_docs-layout/autocomplete-guide'
    | '/docs/_docs-layout/dropdown-guide'
    | '/docs/_docs-layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DocsRoute: typeof DocsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/_docs-layout': {
      id: '/docs/_docs-layout'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsDocsLayoutRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/_docs-layout/': {
      id: '/docs/_docs-layout/'
      path: '/'
      fullPath: '/docs/'
      preLoaderRoute: typeof DocsDocsLayoutIndexRouteImport
      parentRoute: typeof DocsDocsLayoutRoute
    }
    '/docs/_docs-layout/dropdown-guide': {
      id: '/docs/_docs-layout/dropdown-guide'
      path: '/dropdown-guide'
      fullPath: '/docs/dropdown-guide'
      preLoaderRoute: typeof DocsDocsLayoutDropdownGuideRouteImport
      parentRoute: typeof DocsDocsLayoutRoute
    }
    '/docs/_docs-layout/autocomplete-guide': {
      id: '/docs/_docs-layout/autocomplete-guide'
      path: '/autocomplete-guide'
      fullPath: '/docs/autocomplete-guide'
      preLoaderRoute: typeof DocsDocsLayoutAutocompleteGuideRouteImport
      parentRoute: typeof DocsDocsLayoutRoute
    }
  }
}

interface DocsDocsLayoutRouteChildren {
  DocsDocsLayoutAutocompleteGuideRoute: typeof DocsDocsLayoutAutocompleteGuideRoute
  DocsDocsLayoutDropdownGuideRoute: typeof DocsDocsLayoutDropdownGuideRoute
  DocsDocsLayoutIndexRoute: typeof DocsDocsLayoutIndexRoute
}

const DocsDocsLayoutRouteChildren: DocsDocsLayoutRouteChildren = {
  DocsDocsLayoutAutocompleteGuideRoute: DocsDocsLayoutAutocompleteGuideRoute,
  DocsDocsLayoutDropdownGuideRoute: DocsDocsLayoutDropdownGuideRoute,
  DocsDocsLayoutIndexRoute: DocsDocsLayoutIndexRoute,
}

const DocsDocsLayoutRouteWithChildren = DocsDocsLayoutRoute._addFileChildren(
  DocsDocsLayoutRouteChildren,
)

interface DocsRouteChildren {
  DocsDocsLayoutRoute: typeof DocsDocsLayoutRouteWithChildren
}

const DocsRouteChildren: DocsRouteChildren = {
  DocsDocsLayoutRoute: DocsDocsLayoutRouteWithChildren,
}

const DocsRouteWithChildren = DocsRoute._addFileChildren(DocsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DocsRoute: DocsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
